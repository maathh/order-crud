kafka.bootstrap.servers=${BROKER_HOST}:${BROKER_PORT}

mp.messaging.incoming.order-create.connector=smallrye-kafka
mp.messaging.incoming.order-create.topic=ORDER_CREATE
mp.messaging.incoming.order-create.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.order-create.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer

mp.messaging.incoming.order-update.connector=smallrye-kafka
mp.messaging.incoming.order-update.topic=ORDER_UPDATE
mp.messaging.incoming.order-update.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.order-update.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer

mp.messaging.incoming.order-delete.connector=smallrye-kafka
mp.messaging.incoming.order-delete.topic=ORDER_DELETE
mp.messaging.incoming.order-delete.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.order-delete.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer

quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=${DB_USERNAME}
quarkus.datasource.password=${DB_PASSWORD}
quarkus.datasource.jdbc.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_DATABASE}

quarkus.hibernate-orm.database.generation=update
quarkus.hibernate-orm.sql-load-script=no-file

management.datadog.metrics.export.api-key=${DD_API_KEY}
management.datadog.metrics.export.application-key=${DD_API_KEY}
management.datadog.metrics.export.uri=https://us5.datadoghq.com
management.datadog.metrics.export.host-tag=order-crud

quarkus.datadog.api-key=${DD_API_KEY}
quarkus.datadog.site=${DD_API_KEY}
quarkus.datadog.metrics.enabled=true
quarkus.datadog.logs.enabled=true

quarkus.smallrye-metrics.enabled=true

quarkus.metrics.enabled=true
quarkus.metrics.jvm.enabled=true
quarkus.metrics.http.enabled=true

%test.quarkus.datasource.db-kind=h2
%test.quarkus.datasource.jdbc.url=jdbc:h2:tcp://localhost/mem:test

%test.kafka.bootstrap.servers==localhost:9092


